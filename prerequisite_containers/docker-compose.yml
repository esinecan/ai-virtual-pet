version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: cybercore_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: cybercore_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: ankane/pgvector:latest
    container_name: cybercore_postgres
    environment:
      POSTGRES_DB: cybercore_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cybercore_db"]
      interval: 5s
      timeout: 2s
      retries: 10

  ollama:
    image: ollama/ollama:latest
    container_name: cybercore_ollama
    ports:
      - 11434:11434
    volumes:
      - ollama-data:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  companion-llm:
    build:
      context: ../cybercore-companion-backend/cybercore-companion-llm
      dockerfile: Dockerfile
    container_name: cybercore_companion_llm
    ports:
      - 8081:8080
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  companion-rest:
    build:
      context: ../cybercore-companion-backend/cybercore-companion-rest
      dockerfile: Dockerfile
    container_name: cybercore_companion_rest
    ports:
      - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  zookeeper-data:
  kafka-data:
  pgdata:
  ollama-data:
